{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/TrainModel.js\",\n    _this2 = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Input, Button, ListItem } from \"react-native-elements\";\nimport * as DocumentPicker from \"expo-document-picker\";\nvar regressors = [{\n  name: \"LinearRegression\"\n}, {\n  name: \"SVR\"\n}, {\n  name: \"KNeighborsRegressor\"\n}, {\n  name: \"RandomForestRegressor\"\n}, {\n  name: \"GradientBoostingRegressor\"\n}, {\n  name: \"RandomForestRegressor\"\n}, {\n  name: \"GradientBoostingRegressor\"\n}];\nvar classifiers = [{\n  name: \"DecisionTreeClassifier\"\n}, {\n  name: \"LogisticRegression\"\n}, {\n  name: \"SVC\"\n}, {\n  name: \"GaussianNB\"\n}, {\n  name: \"KNeighborsClassifier\"\n}, {\n  name: \"RandomForestClassifier\"\n}, {\n  name: \"GradientBoostingClassifier\"\n}];\nvar clusters = [{\n  name: \"KMeans\"\n}];\n\nfunction Taber() {\n  var _this = this;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      type = _React$useState2[0],\n      setType = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.taber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setType(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Regression\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setType(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Classification\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setType(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Cluster\"))), React.createElement(View, {\n    style: styles.list__view,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, type === 0 ? regressors.map(function (regr, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return alert(regr.name);\n      },\n      style: styles.options,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, regr.name));\n  }) : type === 1 ? classifiers.map(function (regr, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return alert(regr.name);\n      },\n      style: styles.options,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, regr.name));\n  }) : clusters.map(function (regr, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return alert(regr.name);\n      },\n      style: styles.options,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, regr.name));\n  })))));\n}\n\nvar TrainModel = function TrainModel() {\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      document = _React$useState4[0],\n      setDocument = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      expanded = _React$useState6[0],\n      setExpanded = _React$useState6[1];\n\n  var pickDocument = function pickDocument() {\n    var result;\n    return _regeneratorRuntime.async(function pickDocument$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({}));\n\n          case 2:\n            result = _context.sent;\n            alert(result.uri);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    containerStyle: styles.btn,\n    title: \"Load Data\",\n    onPress: pickDocument,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), React.createElement(ListItem.Accordion, {\n    content: React.createElement(React.Fragment, null, React.createElement(ListItem.Content, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"Select Model\"))),\n    isExpanded: expanded,\n    onPress: function onPress() {\n      setExpanded(!expanded);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, React.createElement(ListItem, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItem.Content, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, React.createElement(Taber, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default TrainModel;\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: \"#03091E\",\n    padding: 10\n  },\n  btn: {\n    marginBottom: 10\n  },\n  disabled: {\n    backgroundColor: \"darkgrey\"\n  },\n  taber: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\",\n    padding: 10,\n    backgroundColor: \"lightblue\"\n  },\n  list__view: {\n    display: \"flex\",\n    height: \"80%\"\n  },\n  options: {\n    backgroundColor: \"grey\",\n    padding: 5,\n    margin: 10,\n    marginLeft: 50,\n    marginRight: 50,\n    alignItems: \"center\",\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/TrainModel.js"],"names":["React","useState","createBottomTabNavigator","MaterialIcons","Input","Button","ListItem","DocumentPicker","regressors","name","classifiers","clusters","Taber","type","setType","styles","taber","list__view","map","regr","index","alert","options","TrainModel","document","setDocument","expanded","setExpanded","pickDocument","getDocumentAsync","result","uri","container","btn","StyleSheet","create","display","flex","backgroundColor","padding","marginBottom","disabled","flexDirection","justifyContent","width","height","margin","marginLeft","marginRight","alignItems","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  SafeAreaView,\n  ScrollView,\n} from \"react-native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Input, Button, ListItem } from \"react-native-elements\";\nimport * as DocumentPicker from \"expo-document-picker\";\n\nconst regressors = [\n  {\n    name: \"LinearRegression\",\n  },\n\n  {\n    name: \"SVR\",\n  },\n  {\n    name: \"KNeighborsRegressor\",\n  },\n  {\n    name: \"RandomForestRegressor\",\n  },\n  {\n    name: \"GradientBoostingRegressor\",\n  },\n  {\n    name: \"RandomForestRegressor\",\n  },\n  {\n    name: \"GradientBoostingRegressor\",\n  },\n];\nconst classifiers = [\n  {\n    name: \"DecisionTreeClassifier\",\n  },\n  {\n    name: \"LogisticRegression\",\n  },\n  {\n    name: \"SVC\",\n  },\n\n  {\n    name: \"GaussianNB\",\n  },\n  {\n    name: \"KNeighborsClassifier\",\n  },\n\n  {\n    name: \"RandomForestClassifier\",\n  },\n\n  {\n    name: \"GradientBoostingClassifier\",\n  },\n];\nconst clusters = [\n  {\n    name: \"KMeans\",\n  },\n];\nfunction Taber() {\n  const [type, setType] = React.useState(0);\n  return (\n    <View style={{}}>\n      <View style={styles.taber}>\n        <TouchableOpacity onPress={() => setType(0)}>\n          <Text>Regression</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => setType(1)}>\n          <Text>Classification</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => setType(2)}>\n          <Text>Cluster</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.list__view}>\n        <SafeAreaView>\n          <ScrollView>\n            {type === 0\n              ? regressors.map((regr, index) => (\n                  <TouchableOpacity\n                    onPress={() => alert(regr.name)}\n                    style={styles.options}\n                    key={index}\n                  >\n                    <Text>{regr.name}</Text>\n                  </TouchableOpacity>\n                ))\n              : type === 1\n              ? classifiers.map((regr, index) => (\n                  <TouchableOpacity\n                    onPress={() => alert(regr.name)}\n                    style={styles.options}\n                    key={index}\n                  >\n                    <Text>{regr.name}</Text>\n                  </TouchableOpacity>\n                ))\n              : clusters.map((regr, index) => (\n                  <TouchableOpacity\n                    onPress={() => alert(regr.name)}\n                    style={styles.options}\n                    key={index}\n                  >\n                    <Text>{regr.name}</Text>\n                  </TouchableOpacity>\n                ))}\n          </ScrollView>\n        </SafeAreaView>\n      </View>\n    </View>\n  );\n}\n\nconst TrainModel = () => {\n  const [document, setDocument] = React.useState(null);\n  const [expanded, setExpanded] = React.useState(false);\n  const pickDocument = async () => {\n    let result = await DocumentPicker.getDocumentAsync({});\n    alert(result.uri);\n  };\n  return (\n    <View style={styles.container}>\n      <Button\n        containerStyle={styles.btn}\n        title=\"Load Data\"\n        onPress={pickDocument}\n      />\n      <ListItem.Accordion\n        content={\n          <>\n            <ListItem.Content>\n              <ListItem.Title>Select Model</ListItem.Title>\n            </ListItem.Content>\n          </>\n        }\n        isExpanded={expanded}\n        onPress={() => {\n          setExpanded(!expanded);\n        }}\n      >\n        <ListItem>\n          <ListItem.Content>\n            <Taber />\n          </ListItem.Content>\n        </ListItem>\n      </ListItem.Accordion>\n      {/* <ListItem.Accordion\n        content={\n          <>\n            <ListItem.Content>\n              <ListItem.Title>Train Model</ListItem.Title>\n            </ListItem.Content>\n          </>\n        }\n        isExpanded={expanded}\n        onPress={() => {\n          setExpanded(!expanded);\n        }}\n      >\n        <ListItem.Accordion\n          content={\n            <>\n              <ListItem.Content>\n                <ListItem.Title>Prepare Training Data</ListItem.Title>\n              </ListItem.Content>\n            </>\n          }\n          isExpanded={expanded}\n          onPress={() => {\n            setExpanded(!expanded);\n          }}\n        >\n        </ListItem.Accordion>\n        <ListItem.Accordion\n          content={\n            <>\n              <ListItem.Content>\n                <ListItem.Title>Set HyperParams</ListItem.Title>\n              </ListItem.Content>\n            </>\n          }\n          isExpanded={expanded}\n          onPress={() => {\n            setExpanded(!expanded);\n          }}\n        >\n        </ListItem.Accordion>\n      </ListItem.Accordion> */}\n    </View>\n  );\n};\n\nexport default TrainModel;\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: \"#03091E\",\n    padding: 10,\n  },\n  btn: {\n    marginBottom: 10,\n  },\n  disabled: {\n    backgroundColor: \"darkgrey\",\n  },\n\n  taber: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\",\n    padding: 10,\n    backgroundColor: \"lightblue\",\n  },\n  list__view: {\n    display: \"flex\",\n    height: \"80%\",\n  },\n  options: {\n    backgroundColor: \"grey\",\n    padding: 5,\n    margin: 10,\n    marginLeft: 50,\n    marginRight: 50,\n    alignItems: \"center\",\n    borderRadius: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}