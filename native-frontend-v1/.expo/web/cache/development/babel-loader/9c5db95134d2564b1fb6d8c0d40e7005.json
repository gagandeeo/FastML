{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/LoginPage.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Input, Button } from \"react-native-elements\";\nimport { login, logout } from \"../redux/actions/auth\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport usersApiService from \"../services/usersApi.service\";\n\nvar LoginPage = function LoginPage(props) {\n  var _React$useState = React.useState(\"test4@test.com\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"test4\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var propTypes = {\n    login: PropTypes.func.isRequired,\n    logout: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var formData;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            formData = new FormData();\n            formData.append(\"grant_type\", \"password\");\n            formData.append(\"username\", email);\n            formData.append(\"password\", password);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(props.login(formData, props.navigation));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    enabled: true,\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.login__box,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    type: \"email\",\n    placeholder: \"Email\",\n    style: styles.login__Inp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    style: styles.login__Inp,\n    type: \"password\",\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    containerStyle: styles.login__btn,\n    type: \"outline\",\n    title: \"Log In\",\n    onPress: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapDispatchToProps = {\n  login: login\n};\nexport default connect(null, mapDispatchToProps)(LoginPage);\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#091826\"\n  },\n  login__box: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    top: \"12%\",\n    width: \"60%\",\n    padding: 10,\n    backgroundColor: \"#50525C\",\n    alignItems: \"center\"\n  },\n  login__Inp: {\n    color: \"white\"\n  },\n  login__btn: {}\n});","map":{"version":3,"sources":["/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/LoginPage.js"],"names":["React","Input","Button","login","logout","PropTypes","connect","usersApiService","LoginPage","props","useState","email","setEmail","password","setPassword","propTypes","func","isRequired","isAuthenticated","bool","handleSubmit","formData","FormData","append","navigation","styles","container","login__box","text","login__Inp","login__btn","height","mapDispatchToProps","StyleSheet","create","display","flex","alignItems","backgroundColor","flexDirection","top","width","padding","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View, KeyboardAvoidingView } from \"react-native\";\nimport { Input, Button } from \"react-native-elements\";\nimport { login, logout } from \"../redux/actions/auth\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport usersApiService from \"../services/usersApi.service\";\nconst LoginPage = (props) => {\n  const [email, setEmail] = React.useState(\"test4@test.com\");\n  const [password, setPassword] = React.useState(\"test4\");\n  const propTypes = {\n    login: PropTypes.func.isRequired,\n    logout: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n  };\n\n  const handleSubmit = async () => {\n    const formData = new FormData();\n    formData.append(\"grant_type\", \"password\");\n    formData.append(\"username\", email);\n    formData.append(\"password\", password);\n    await props.login(formData, props.navigation);\n  };\n\n  return (\n    <KeyboardAvoidingView enabled style={styles.container}>\n      <View style={styles.login__box}>\n        <Input\n          onChangeText={(text) => setEmail(text)}\n          type=\"email\"\n          placeholder=\"Email\"\n          style={styles.login__Inp}\n        />\n        <Input\n          onChangeText={(text) => setPassword(text)}\n          style={styles.login__Inp}\n          type=\"password\"\n          placeholder=\"Password\"\n          secureTextEntry={true}\n        />\n        <Button\n          containerStyle={styles.login__btn}\n          type=\"outline\"\n          title=\"Log In\"\n          onPress={handleSubmit}\n        />\n      </View>\n      <View style={{ height: 20 }} />\n    </KeyboardAvoidingView>\n  );\n};\nconst mapDispatchToProps = {\n  login,\n};\n\nexport default connect(null, mapDispatchToProps)(LoginPage);\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#091826\",\n  },\n  login__box: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    top: \"12%\",\n    width: \"60%\",\n    padding: 10,\n    backgroundColor: \"#50525C\",\n    alignItems: \"center\",\n  },\n  login__Inp: {\n    color: \"white\",\n  },\n  login__btn: {},\n});\n"]},"metadata":{},"sourceType":"module"}