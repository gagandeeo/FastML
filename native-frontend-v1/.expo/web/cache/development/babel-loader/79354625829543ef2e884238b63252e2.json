{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/TrainModel.js\",\n    _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Input, Button, ListItem } from \"react-native-elements\";\nimport * as DocumentPicker from \"expo-document-picker\";\n\nfunction SettingsScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Settings!\"));\n}\n\nfunction SettingScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Setting1!\"));\n}\n\nfunction Taber() {\n  return React.createElement(View, {\n    style: styles.taber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"hello\")), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"hello\")), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"hello\")));\n}\n\nvar TrainModel = function TrainModel() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      document = _React$useState2[0],\n      setDocument = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      expanded = _React$useState4[0],\n      setExpanded = _React$useState4[1];\n\n  var pickDocument = function pickDocument() {\n    var result;\n    return _regeneratorRuntime.async(function pickDocument$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({}));\n\n          case 2:\n            result = _context.sent;\n            alert(result.uri);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    containerStyle: styles.btn,\n    title: \"Load Data\",\n    onPress: pickDocument,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(ListItem.Accordion, {\n    content: React.createElement(React.Fragment, null, React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, \"Select Model\"))),\n    isExpanded: expanded,\n    onPress: function onPress() {\n      setExpanded(!expanded);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItem.Content, {\n    style: styles.list__content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, React.createElement(Taber, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default TrainModel;\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: \"#03091E\",\n    padding: 10\n  },\n  btn: {\n    marginBottom: 10\n  },\n  disabled: {\n    backgroundColor: \"darkgrey\"\n  },\n  taber: {\n    flexDirection: \"row\",\n    backgroundColor: \"brown\"\n  },\n  list__content: {\n    display: \"flex\",\n    backgroundColor: \"black\",\n    justifyContent: \"space-between\",\n    padding: 2\n  }\n});","map":{"version":3,"sources":["/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/TrainModel.js"],"names":["React","useState","createBottomTabNavigator","MaterialIcons","Input","Button","ListItem","DocumentPicker","SettingsScreen","flex","justifyContent","alignItems","SettingScreen","Taber","styles","taber","TrainModel","document","setDocument","expanded","setExpanded","pickDocument","getDocumentAsync","result","alert","uri","container","btn","list__content","StyleSheet","create","display","backgroundColor","padding","marginBottom","disabled","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Input, Button, ListItem } from \"react-native-elements\";\nimport * as DocumentPicker from \"expo-document-picker\";\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n\nfunction SettingScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text>Setting1!</Text>\n    </View>\n  );\n}\n\nfunction Taber() {\n  return (\n    <View style={styles.taber}>\n      <TouchableOpacity>\n        <Text>hello</Text>\n      </TouchableOpacity>\n      <TouchableOpacity>\n        <Text>hello</Text>\n      </TouchableOpacity>\n      <TouchableOpacity>\n        <Text>hello</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst TrainModel = () => {\n  const [document, setDocument] = React.useState(null);\n  const [expanded, setExpanded] = React.useState(false);\n  const pickDocument = async () => {\n    let result = await DocumentPicker.getDocumentAsync({});\n    alert(result.uri);\n  };\n  return (\n    <View style={styles.container}>\n      <Button\n        containerStyle={styles.btn}\n        title=\"Load Data\"\n        onPress={pickDocument}\n      />\n      <ListItem.Accordion\n        content={\n          <>\n            <ListItem.Content>\n              <ListItem.Title>Select Model</ListItem.Title>\n            </ListItem.Content>\n          </>\n        }\n        isExpanded={expanded}\n        onPress={() => {\n          setExpanded(!expanded);\n        }}\n      >\n        <ListItem>\n          <ListItem.Content style={styles.list__content}>\n            <Taber />\n          </ListItem.Content>\n        </ListItem>\n      </ListItem.Accordion>\n      {/* <ListItem.Accordion\n        content={\n          <>\n            <ListItem.Content>\n              <ListItem.Title>Train Model</ListItem.Title>\n            </ListItem.Content>\n          </>\n        }\n        isExpanded={expanded}\n        onPress={() => {\n          setExpanded(!expanded);\n        }}\n      >\n        <ListItem.Accordion\n          content={\n            <>\n              <ListItem.Content>\n                <ListItem.Title>Prepare Training Data</ListItem.Title>\n              </ListItem.Content>\n            </>\n          }\n          isExpanded={expanded}\n          onPress={() => {\n            setExpanded(!expanded);\n          }}\n        >\n        </ListItem.Accordion>\n        <ListItem.Accordion\n          content={\n            <>\n              <ListItem.Content>\n                <ListItem.Title>Set HyperParams</ListItem.Title>\n              </ListItem.Content>\n            </>\n          }\n          isExpanded={expanded}\n          onPress={() => {\n            setExpanded(!expanded);\n          }}\n        >\n        </ListItem.Accordion>\n      </ListItem.Accordion> */}\n    </View>\n  );\n};\n\nexport default TrainModel;\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: \"#03091E\",\n    padding: 10,\n  },\n  btn: {\n    marginBottom: 10,\n  },\n  disabled: {\n    backgroundColor: \"darkgrey\",\n  },\n  taber: {\n    // flex: 1,\n    // display: \"flex\",\n    flexDirection: \"row\",\n    backgroundColor: \"brown\",\n  },\n  list__content: {\n    display: \"flex\",\n    backgroundColor: \"black\",\n    justifyContent: \"space-between\",\n    padding: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}