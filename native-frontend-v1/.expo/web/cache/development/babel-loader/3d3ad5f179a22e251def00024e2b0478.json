{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/App.js\";\n\nimport \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport LandingPage from \"./screens/LandingPage\";\nimport SignUpPage from \"./screens/SignUpPage\";\nimport LoginPage from \"./screens/LoginPage\";\nimport Dashboard from \"./screens/Dashboard\";\nimport { store } from \"./redux/configureStore\";\nimport { Provider } from \"react-redux\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport NavigationControl from \"./NavigationControl\";\nvar Stack = createStackNavigator();\n\nvar App = function App() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      token = _React$useState2[0],\n      setToken = _React$useState2[1];\n\n  React.useEffect(function () {\n    AsyncStorage.getItem(\"token\").then(function (res) {\n      setToken(res);\n    });\n  }, []);\n  return React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationControl, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/App.js"],"names":["StatusBar","React","createStackNavigator","LandingPage","SignUpPage","LoginPage","Dashboard","store","Provider","AsyncStorage","NavigationControl","Stack","App","useState","token","setToken","useEffect","getItem","then","res","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;AAAA,OAAO,8BAAP;AACA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAGA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,SAASC,KAAT;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,iBAAP;AACA,IAAMC,KAAK,GAAGT,oBAAoB,EAAlC;;AAEA,IAAMU,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,wBAA0BX,KAAK,CAACY,QAAN,CAAe,IAAf,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,YAAM;AACpBP,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BC,IAA9B,CAAmC,UAACC,GAAD,EAAS;AAC1CJ,MAAAA,QAAQ,CAACI,GAAD,CAAR;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;AAMA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoBE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF;AAwBD,CAhCD;;AAiCA,eAAeK,GAAf;AAsBA,IAAMQ,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Button, StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\n\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport LandingPage from \"./screens/LandingPage\";\nimport SignUpPage from \"./screens/SignUpPage\";\nimport LoginPage from \"./screens/LoginPage\";\nimport Dashboard from \"./screens/Dashboard\";\nimport { store } from \"./redux/configureStore\";\nimport { Provider } from \"react-redux\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport NavigationControl from \"./NavigationControl\";\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  const [token, setToken] = React.useState(null);\n  React.useEffect(() => {\n    AsyncStorage.getItem(\"token\").then((res) => {\n      setToken(res);\n    });\n  }, []);\n\n  return (\n    <Provider store={store}>\n      {/* <NavigationContainer>\n        <Stack.Navigator>\n          {token ? (\n            <Stack.Screen name=\"Dashboard\" component={Dashboard} />\n          ) : (\n            <>\n              <Stack.Screen\n                name=\"LandingPage\"\n                component={LandingPage}\n                options={({ navigation, route }) => ({\n                  headerTitle: \"FastML\",\n                })}\n              />\n              <Stack.Screen name=\"SignUpPage\" component={SignUpPage} />\n              <Stack.Screen name=\"LoginPage\" component={LoginPage} />\n            </>\n          )}\n        </Stack.Navigator>\n      </NavigationContainer> */}\n      <NavigationControl />\n    </Provider>\n  );\n};\nexport default App;\n// export default function App() {\n//   return (\n//     <Provider store={store}>\n//       <NavigationContainer>\n//         <Stack.Navigator>\n//           <Stack.Screen\n//             name=\"LandingPage\"\n//             component={LandingPage}\n//             options={({ navigation, route }) => ({\n//               headerTitle: \"FastML\",\n//             })}\n//           />\n//           <Stack.Screen name=\"SignUpPage\" component={SignUpPage} />\n//           <Stack.Screen name=\"LoginPage\" component={LoginPage} />\n//           <Stack.Screen name=\"Dashboard\" component={Dashboard} />\n//         </Stack.Navigator>\n//       </NavigationContainer>\n//     </Provider>\n//   );\n// }\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}