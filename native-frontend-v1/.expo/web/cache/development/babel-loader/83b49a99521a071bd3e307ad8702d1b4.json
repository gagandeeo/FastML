{"ast":null,"code":"var _jsxFileName = \"/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/Dashboard.js\",\n    _this = this;\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport TrainModel from \"./TrainModel\";\n\nfunction SettingsScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"Settings!\"));\n}\n\nfunction SettingScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Setting1!\"));\n}\n\nvar Tab = createBottomTabNavigator();\n\nvar Dashboard = function Dashboard() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Train\") {\n            iconName = focused ? \"offline-bolt\" : \"offline-bolt\";\n          } else if (route.name === \"Report\") {\n            iconName = focused ? \"assessment\" : \"assessment\";\n          } else if (route.name === \"Predict\") {\n            iconName = focused ? \"play-for-work\" : \"play-for-work\";\n          }\n\n          return React.createElement(MaterialIcons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 18\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      style: styles.tab,\n      tabStyle: styles.tab__options,\n      activeTintColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Train\",\n    component: TrainModel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Report\",\n    component: SettingsScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Predict\",\n    component: SettingScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Dashboard;\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  text: {\n    alignItems: \"center\",\n    marginTop: \"30%\"\n  },\n  tab: {\n    position: \"absolute\",\n    display: \"flex\",\n    backgroundColor: \"#264920\",\n    margin: 5,\n    marginBottom: 10\n  },\n  tab__options: {\n    padding: 5,\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/Dashboard.js"],"names":["React","createBottomTabNavigator","MaterialIcons","TrainModel","SettingsScreen","flex","justifyContent","alignItems","SettingScreen","Tab","Dashboard","route","tabBarIcon","focused","color","size","iconName","name","style","styles","tab","tabStyle","tab__options","activeTintColor","StyleSheet","create","container","display","flexDirection","text","marginTop","position","backgroundColor","margin","marginBottom","padding","alignSelf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View, Button } from \"react-native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport TrainModel from \"./TrainModel\";\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n\nfunction SettingScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text>Setting1!</Text>\n    </View>\n  );\n}\n\nconst Tab = createBottomTabNavigator();\n\nconst Dashboard = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n          if (route.name === \"Train\") {\n            iconName = focused ? \"offline-bolt\" : \"offline-bolt\";\n          } else if (route.name === \"Report\") {\n            iconName = focused ? \"assessment\" : \"assessment\";\n          } else if (route.name === \"Predict\") {\n            iconName = focused ? \"play-for-work\" : \"play-for-work\";\n          }\n          return <MaterialIcons name={iconName} size={size} color={color} />;\n        },\n      })}\n      tabBarOptions={{\n        style: styles.tab,\n        tabStyle: styles.tab__options,\n        activeTintColor: \"white\",\n      }}\n    >\n      <Tab.Screen name=\"Train\" component={TrainModel} />\n      <Tab.Screen name=\"Report\" component={SettingsScreen} />\n      <Tab.Screen name=\"Predict\" component={SettingScreen} />\n    </Tab.Navigator>\n  );\n};\n\nexport default Dashboard;\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  text: {\n    alignItems: \"center\",\n    marginTop: \"30%\",\n  },\n  tab: {\n    position: \"absolute\",\n    display: \"flex\",\n    backgroundColor: \"#264920\",\n    margin: 5,\n    marginBottom: 10,\n  },\n  tab__options: {\n    padding: 5,\n    alignSelf: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}