{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/Predict.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from \"react-native-elements\";\nimport * as DocumentPicker from \"expo-document-picker\";\n\nvar Predict = function Predict() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      document = _React$useState2[0],\n      setDocument = _React$useState2[1];\n\n  var pickDocument = function pickDocument() {\n    var result;\n    return _regeneratorRuntime.async(function pickDocument$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({}));\n\n          case 2:\n            result = _context.sent;\n            alert(result.uri);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    containerStyle: styles.btn,\n    title: \"Predict Data\",\n    onPress: pickDocument,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Predict;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#212311\"\n  },\n  btn: {\n    margin: 10\n  }\n});","map":{"version":3,"sources":["/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/Predict.js"],"names":["React","Button","DocumentPicker","Predict","useState","document","setDocument","pickDocument","getDocumentAsync","result","alert","uri","styles","container","btn","StyleSheet","create","flex","backgroundColor","margin"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT,QAAuB,uBAAvB;AACA,OAAO,KAAKC,cAAZ,MAAgC,sBAAhC;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,wBAAgCH,KAAK,CAACI,QAAN,CAAe,IAAf,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACAL,cAAc,CAACM,gBAAf,CAAgC,EAAhC,CADA;;AAAA;AACfC,YAAAA,MADe;AAEnBC,YAAAA,KAAK,CAACD,MAAM,CAACE,GAAR,CAAL;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,cAAc,EAAED,MAAM,CAACE,GADzB;AAEE,IAAA,KAAK,EAAE,cAFT;AAGE,IAAA,OAAO,EAAEP,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD,CAfD;;AAiBA,eAAeJ,OAAf;AAEA,IAAMS,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BJ,EAAAA,GAAG,EAAE;AACHK,IAAAA,MAAM,EAAE;AADL;AAL0B,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Button } from \"react-native-elements\";\nimport * as DocumentPicker from \"expo-document-picker\";\nconst Predict = () => {\n  const [document, setDocument] = React.useState(null);\n  const pickDocument = async () => {\n    let result = await DocumentPicker.getDocumentAsync({});\n    alert(result.uri);\n  };\n  return (\n    <View style={styles.container}>\n      <Button\n        containerStyle={styles.btn}\n        title={\"Predict Data\"}\n        onPress={pickDocument}\n      />\n    </View>\n  );\n};\n\nexport default Predict;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#212311\",\n  },\n  btn: {\n    margin: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}