{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/TrainModel.js\",\n    _this2 = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Input, Button, ListItem, CheckBox } from \"react-native-elements\";\nimport * as DocumentPicker from \"expo-document-picker\";\nvar regressors = [{\n  name: \"LinearRegression\"\n}, {\n  name: \"SVR\"\n}, {\n  name: \"KNeighborsRegressor\"\n}, {\n  name: \"RandomForestRegressor\"\n}, {\n  name: \"GradientBoostingRegressor\"\n}, {\n  name: \"RandomForestRegressor\"\n}, {\n  name: \"GradientBoostingRegressor\"\n}];\nvar classifiers = [{\n  name: \"DecisionTreeClassifier\"\n}, {\n  name: \"LogisticRegression\"\n}, {\n  name: \"SVC\"\n}, {\n  name: \"GaussianNB\"\n}, {\n  name: \"KNeighborsClassifier\"\n}, {\n  name: \"RandomForestClassifier\"\n}, {\n  name: \"GradientBoostingClassifier\"\n}];\nvar clusters = [{\n  name: \"KMeans\"\n}];\n\nfunction Taber() {\n  var _this = this;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      type = _React$useState2[0],\n      setType = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.taber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setType(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Regression\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setType(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Classification\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setType(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Cluster\"))), React.createElement(View, {\n    style: styles.list__view,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, type === 0 ? regressors.map(function (regr, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return alert(regr.name);\n      },\n      style: styles.options,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, regr.name));\n  }) : type === 1 ? classifiers.map(function (regr, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return alert(regr.name);\n      },\n      style: styles.options,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, regr.name));\n  }) : clusters.map(function (regr, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return alert(regr.name);\n      },\n      style: styles.options,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, regr.name));\n  })))));\n}\n\nvar TrainModel = function TrainModel() {\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      document = _React$useState4[0],\n      setDocument = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      checked = _React$useState6[0],\n      setChecked = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      expanded = _React$useState8[0],\n      setExpanded = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      expanded1 = _React$useState10[0],\n      setExpanded1 = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      expanded2 = _React$useState12[0],\n      setExpanded2 = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      expanded3 = _React$useState14[0],\n      setExpanded3 = _React$useState14[1];\n\n  var pickDocument = function pickDocument() {\n    var result;\n    return _regeneratorRuntime.async(function pickDocument$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({}));\n\n          case 2:\n            result = _context.sent;\n            alert(result.uri);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    containerStyle: styles.btn,\n    title: \"Load Data\",\n    onPress: pickDocument,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), React.createElement(ListItem.Accordion, {\n    content: React.createElement(React.Fragment, null, React.createElement(ListItem.Content, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"Select Model\"))),\n    isExpanded: expanded,\n    onPress: function onPress() {\n      setExpanded(!expanded);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, React.createElement(ListItem, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItem.Content, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, React.createElement(Taber, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  })))), React.createElement(ListItem.Accordion, {\n    content: React.createElement(React.Fragment, null, React.createElement(ListItem.Content, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, \"Train Model\"))),\n    isExpanded: expanded1,\n    onPress: function onPress() {\n      setExpanded1(!expanded1);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, React.createElement(ListItem.Accordion, {\n    content: React.createElement(React.Fragment, null, React.createElement(ListItem.Content, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, \"Prepare Training Data\"))),\n    isExpanded: expanded2,\n    onPress: function onPress() {\n      setExpanded2(!expanded2);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItem, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, React.createElement(ListItem.Content, {\n    style: {\n      height: \"80%\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, React.createElement(CheckBox, {\n    center: true,\n    title: \"DropNa\",\n    checked: checked,\n    onPress: function onPress() {\n      return setChecked(!checked);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Imputer Name\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Encoder Name\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Scaler Name\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }), React.createElement(Input, {\n    inputContainerStyle: {\n      borderBottomColor: \"red\"\n    },\n    placeholder: \"Target Class Name*\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 20\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }))))), React.createElement(ListItem.Accordion, {\n    content: React.createElement(React.Fragment, null, React.createElement(ListItem.Content, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, \"Set HyperParams\"))),\n    isExpanded: expanded3,\n    onPress: function onPress() {\n      setExpanded3(!expanded3);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TrainModel;\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: \"#03091E\",\n    padding: 10\n  },\n  btn: {\n    marginBottom: 10\n  },\n  disabled: {\n    backgroundColor: \"darkgrey\"\n  },\n  taber: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\",\n    padding: 10,\n    backgroundColor: \"lightblue\"\n  },\n  list__view: {\n    display: \"flex\",\n    height: \"80%\"\n  },\n  options: {\n    backgroundColor: \"grey\",\n    padding: 10,\n    margin: 10,\n    marginLeft: 50,\n    marginRight: 50,\n    alignItems: \"center\",\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/TrainModel.js"],"names":["React","useState","createBottomTabNavigator","MaterialIcons","Input","Button","ListItem","CheckBox","DocumentPicker","regressors","name","classifiers","clusters","Taber","type","setType","styles","taber","list__view","map","regr","index","alert","options","TrainModel","document","setDocument","checked","setChecked","expanded","setExpanded","expanded1","setExpanded1","expanded2","setExpanded2","expanded3","setExpanded3","pickDocument","getDocumentAsync","result","uri","container","btn","height","borderBottomColor","StyleSheet","create","display","flex","backgroundColor","padding","marginBottom","disabled","flexDirection","justifyContent","width","margin","marginLeft","marginRight","alignItems","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  SafeAreaView,\n  ScrollView,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Input, Button, ListItem, CheckBox } from \"react-native-elements\";\nimport * as DocumentPicker from \"expo-document-picker\";\n\nconst regressors = [\n  {\n    name: \"LinearRegression\",\n  },\n\n  {\n    name: \"SVR\",\n  },\n  {\n    name: \"KNeighborsRegressor\",\n  },\n  {\n    name: \"RandomForestRegressor\",\n  },\n  {\n    name: \"GradientBoostingRegressor\",\n  },\n  {\n    name: \"RandomForestRegressor\",\n  },\n  {\n    name: \"GradientBoostingRegressor\",\n  },\n];\nconst classifiers = [\n  {\n    name: \"DecisionTreeClassifier\",\n  },\n  {\n    name: \"LogisticRegression\",\n  },\n  {\n    name: \"SVC\",\n  },\n\n  {\n    name: \"GaussianNB\",\n  },\n  {\n    name: \"KNeighborsClassifier\",\n  },\n\n  {\n    name: \"RandomForestClassifier\",\n  },\n\n  {\n    name: \"GradientBoostingClassifier\",\n  },\n];\nconst clusters = [\n  {\n    name: \"KMeans\",\n  },\n];\nfunction Taber() {\n  const [type, setType] = React.useState(0);\n  return (\n    <View style={{}}>\n      <View style={styles.taber}>\n        <TouchableOpacity onPress={() => setType(0)}>\n          <Text>Regression</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => setType(1)}>\n          <Text>Classification</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => setType(2)}>\n          <Text>Cluster</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.list__view}>\n        <SafeAreaView>\n          <ScrollView>\n            {type === 0\n              ? regressors.map((regr, index) => (\n                  <TouchableOpacity\n                    onPress={() => alert(regr.name)}\n                    style={styles.options}\n                    key={index}\n                  >\n                    <Text>{regr.name}</Text>\n                  </TouchableOpacity>\n                ))\n              : type === 1\n              ? classifiers.map((regr, index) => (\n                  <TouchableOpacity\n                    onPress={() => alert(regr.name)}\n                    style={styles.options}\n                    key={index}\n                  >\n                    <Text>{regr.name}</Text>\n                  </TouchableOpacity>\n                ))\n              : clusters.map((regr, index) => (\n                  <TouchableOpacity\n                    onPress={() => alert(regr.name)}\n                    style={styles.options}\n                    key={index}\n                  >\n                    <Text>{regr.name}</Text>\n                  </TouchableOpacity>\n                ))}\n          </ScrollView>\n        </SafeAreaView>\n      </View>\n    </View>\n  );\n}\n\nconst TrainModel = () => {\n  const [document, setDocument] = React.useState(null);\n  const [checked, setChecked] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [expanded1, setExpanded1] = React.useState(false);\n  const [expanded2, setExpanded2] = React.useState(false);\n  const [expanded3, setExpanded3] = React.useState(false);\n  const pickDocument = async () => {\n    let result = await DocumentPicker.getDocumentAsync({});\n    alert(result.uri);\n  };\n  return (\n    <View style={styles.container}>\n      <Button\n        containerStyle={styles.btn}\n        title=\"Load Data\"\n        onPress={pickDocument}\n      />\n      <ListItem.Accordion\n        content={\n          <>\n            <ListItem.Content>\n              <ListItem.Title>Select Model</ListItem.Title>\n            </ListItem.Content>\n          </>\n        }\n        isExpanded={expanded}\n        onPress={() => {\n          setExpanded(!expanded);\n        }}\n      >\n        <ListItem>\n          <ListItem.Content>\n            <Taber />\n          </ListItem.Content>\n        </ListItem>\n      </ListItem.Accordion>\n      <ListItem.Accordion\n        content={\n          <>\n            <ListItem.Content>\n              <ListItem.Title>Train Model</ListItem.Title>\n            </ListItem.Content>\n          </>\n        }\n        isExpanded={expanded1}\n        onPress={() => {\n          setExpanded1(!expanded1);\n        }}\n      >\n        <ListItem.Accordion\n          content={\n            <>\n              <ListItem.Content>\n                <ListItem.Title>Prepare Training Data</ListItem.Title>\n              </ListItem.Content>\n            </>\n          }\n          isExpanded={expanded2}\n          onPress={() => {\n            setExpanded2(!expanded2);\n          }}\n        >\n          <ListItem>\n            <ListItem.Content style={{ height: \"80%\" }}>\n              <KeyboardAvoidingView>\n                <ScrollView>\n                  <CheckBox\n                    center\n                    title=\"DropNa\"\n                    checked={checked}\n                    onPress={() => setChecked(!checked)}\n                  />\n                  <Input placeholder=\"Imputer Name\" />\n                  <Input placeholder=\"Encoder Name\" />\n                  <Input placeholder=\"Scaler Name\" />\n                  <Input\n                    inputContainerStyle={{ borderBottomColor: \"red\" }}\n                    placeholder=\"Target Class Name*\"\n                  />\n                </ScrollView>\n                <View style={{ height: 20 }} />\n              </KeyboardAvoidingView>\n            </ListItem.Content>\n          </ListItem>\n        </ListItem.Accordion>\n        <ListItem.Accordion\n          content={\n            <>\n              <ListItem.Content>\n                <ListItem.Title>Set HyperParams</ListItem.Title>\n              </ListItem.Content>\n            </>\n          }\n          isExpanded={expanded3}\n          onPress={() => {\n            setExpanded3(!expanded3);\n          }}\n        ></ListItem.Accordion>\n      </ListItem.Accordion>\n    </View>\n  );\n};\n\nexport default TrainModel;\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: \"#03091E\",\n    padding: 10,\n  },\n  btn: {\n    marginBottom: 10,\n  },\n  disabled: {\n    backgroundColor: \"darkgrey\",\n  },\n\n  taber: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\",\n    padding: 10,\n    backgroundColor: \"lightblue\",\n  },\n  list__view: {\n    display: \"flex\",\n    height: \"80%\",\n  },\n  options: {\n    backgroundColor: \"grey\",\n    padding: 10,\n    margin: 10,\n    marginLeft: 50,\n    marginRight: 50,\n    alignItems: \"center\",\n    borderRadius: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}