{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/TrainModel.js\",\n    _this2 = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Input, Button, ListItem } from \"react-native-elements\";\nimport * as DocumentPicker from \"expo-document-picker\";\n\nfunction SettingsScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Settings!\"));\n}\n\nfunction SettingScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Setting1!\"));\n}\n\nvar regressors = [{\n  name: \"LinearRegression\"\n}, {\n  name: \"SVR\"\n}, {\n  name: \"KNeighborsRegressor\"\n}, {\n  name: \"RandomForestRegressor\"\n}, {\n  name: \"GradientBoostingRegressor\"\n}, {\n  name: \"RandomForestRegressor\"\n}, {\n  name: \"GradientBoostingRegressor\"\n}];\n\nfunction Taber() {\n  var _this = this;\n\n  return React.createElement(View, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.taber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Regression\")), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Classification\")), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Cluster\"))), React.createElement(View, {\n    style: styles.list__view,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, regressors.map(function (regr, index) {\n    return React.createElement(TouchableOpacity, {\n      style: styles.options,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, regr.name));\n  })))));\n}\n\nvar TrainModel = function TrainModel() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      document = _React$useState2[0],\n      setDocument = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      expanded = _React$useState4[0],\n      setExpanded = _React$useState4[1];\n\n  var pickDocument = function pickDocument() {\n    var result;\n    return _regeneratorRuntime.async(function pickDocument$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({}));\n\n          case 2:\n            result = _context.sent;\n            alert(result.uri);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    containerStyle: styles.btn,\n    title: \"Load Data\",\n    onPress: pickDocument,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), React.createElement(ListItem.Accordion, {\n    content: React.createElement(React.Fragment, null, React.createElement(ListItem.Content, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, \"Select Model\"))),\n    isExpanded: expanded,\n    onPress: function onPress() {\n      setExpanded(!expanded);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, React.createElement(ListItem, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItem.Content, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, React.createElement(Taber, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default TrainModel;\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: \"#03091E\",\n    padding: 10\n  },\n  btn: {\n    marginBottom: 10\n  },\n  disabled: {\n    backgroundColor: \"darkgrey\"\n  },\n  taber: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    padding: 10\n  },\n  list__view: {\n    display: \"flex\",\n    height: \"80%\",\n    marginRight: 38\n  },\n  options: {\n    backgroundColor: \"grey\",\n    padding: 10,\n    margin: 10,\n    marginLeft: 50,\n    marginRight: 50\n  }\n});","map":{"version":3,"sources":["/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/TrainModel.js"],"names":["React","useState","createBottomTabNavigator","MaterialIcons","Input","Button","ListItem","DocumentPicker","SettingsScreen","flex","justifyContent","alignItems","SettingScreen","regressors","name","Taber","styles","taber","list__view","map","regr","index","options","TrainModel","document","setDocument","expanded","setExpanded","pickDocument","getDocumentAsync","result","alert","uri","container","btn","StyleSheet","create","display","backgroundColor","padding","marginBottom","disabled","flexDirection","width","height","marginRight","margin","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  SafeAreaView,\n  ScrollView,\n} from \"react-native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Input, Button, ListItem } from \"react-native-elements\";\nimport * as DocumentPicker from \"expo-document-picker\";\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n\nfunction SettingScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text>Setting1!</Text>\n    </View>\n  );\n}\nconst regressors = [\n  {\n    name: \"LinearRegression\",\n  },\n\n  {\n    name: \"SVR\",\n  },\n  {\n    name: \"KNeighborsRegressor\",\n  },\n  {\n    name: \"RandomForestRegressor\",\n  },\n  {\n    name: \"GradientBoostingRegressor\",\n  },\n  {\n    name: \"RandomForestRegressor\",\n  },\n  {\n    name: \"GradientBoostingRegressor\",\n  },\n];\nfunction Taber() {\n  return (\n    <View style={{}}>\n      <View style={styles.taber}>\n        <TouchableOpacity>\n          <Text>Regression</Text>\n        </TouchableOpacity>\n        <TouchableOpacity>\n          <Text>Classification</Text>\n        </TouchableOpacity>\n        <TouchableOpacity>\n          <Text>Cluster</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.list__view}>\n        <SafeAreaView>\n          <ScrollView>\n            {regressors.map((regr, index) => (\n              <TouchableOpacity style={styles.options} key={index}>\n                <Text>{regr.name}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </SafeAreaView>\n      </View>\n    </View>\n  );\n}\n\nconst TrainModel = () => {\n  const [document, setDocument] = React.useState(null);\n  const [expanded, setExpanded] = React.useState(false);\n  const pickDocument = async () => {\n    let result = await DocumentPicker.getDocumentAsync({});\n    alert(result.uri);\n  };\n  return (\n    <View style={styles.container}>\n      <Button\n        containerStyle={styles.btn}\n        title=\"Load Data\"\n        onPress={pickDocument}\n      />\n      <ListItem.Accordion\n        content={\n          <>\n            <ListItem.Content>\n              <ListItem.Title>Select Model</ListItem.Title>\n            </ListItem.Content>\n          </>\n        }\n        isExpanded={expanded}\n        onPress={() => {\n          setExpanded(!expanded);\n        }}\n      >\n        <ListItem>\n          <ListItem.Content>\n            <Taber />\n          </ListItem.Content>\n        </ListItem>\n      </ListItem.Accordion>\n      {/* <ListItem.Accordion\n        content={\n          <>\n            <ListItem.Content>\n              <ListItem.Title>Train Model</ListItem.Title>\n            </ListItem.Content>\n          </>\n        }\n        isExpanded={expanded}\n        onPress={() => {\n          setExpanded(!expanded);\n        }}\n      >\n        <ListItem.Accordion\n          content={\n            <>\n              <ListItem.Content>\n                <ListItem.Title>Prepare Training Data</ListItem.Title>\n              </ListItem.Content>\n            </>\n          }\n          isExpanded={expanded}\n          onPress={() => {\n            setExpanded(!expanded);\n          }}\n        >\n        </ListItem.Accordion>\n        <ListItem.Accordion\n          content={\n            <>\n              <ListItem.Content>\n                <ListItem.Title>Set HyperParams</ListItem.Title>\n              </ListItem.Content>\n            </>\n          }\n          isExpanded={expanded}\n          onPress={() => {\n            setExpanded(!expanded);\n          }}\n        >\n        </ListItem.Accordion>\n      </ListItem.Accordion> */}\n    </View>\n  );\n};\n\nexport default TrainModel;\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: \"#03091E\",\n    padding: 10,\n  },\n  btn: {\n    marginBottom: 10,\n  },\n  disabled: {\n    backgroundColor: \"darkgrey\",\n  },\n\n  taber: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    padding: 10,\n  },\n  list__view: {\n    display: \"flex\",\n    height: \"80%\",\n    marginRight: 38,\n  },\n  options: {\n    backgroundColor: \"grey\",\n    padding: 10,\n    margin: 10,\n    marginLeft: 50,\n    marginRight: 50,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}