{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/ResultModel.js\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Plotly from \"react-native-plotly\";\nimport { LineChart } from \"react-native-chart-kit\";\n\nvar ResultModel = function ResultModel() {\n  var data = [{\n    __id: \"up\",\n    x: [1, 2, 3, 4],\n    y: [1, 2, 3, 4],\n    type: \"scatter\"\n  }];\n  var layout = {\n    title: \"My cool chart!\"\n  };\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Bezier Line Chart\"), React.createElement(LineChart, {\n    data: {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n      datasets: [{\n        data: [Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100]\n      }]\n    },\n    width: Dimensions.get(\"window\").width,\n    height: 220,\n    yAxisLabel: \"$\",\n    yAxisSuffix: \"k\",\n    yAxisInterval: 1,\n    chartConfig: {\n      backgroundColor: \"#e26a00\",\n      backgroundGradientFrom: \"#fb8c00\",\n      backgroundGradientTo: \"#ffa726\",\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"6\",\n        strokeWidth: \"2\",\n        stroke: \"#ffa726\"\n      }\n    },\n    bezier: true,\n    style: {\n      marginVertical: 8,\n      borderRadius: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ResultModel;\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    backgroundColor: \"#51543F\",\n    flex: 1\n  },\n  container__box: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  metrics: {\n    backgroundColor: \"#C4C4C4\",\n    margin: 10\n  },\n  result: {\n    height: \"90%\",\n    backgroundColor: \"#C4C4C4\",\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/ResultModel.js"],"names":["React","Plotly","LineChart","ResultModel","data","__id","x","y","type","layout","title","labels","datasets","Math","random","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","marginVertical","styles","StyleSheet","create","container","display","flex","container__box","justifyContent","metrics","margin","result","height","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View, SafeAreaView, ScrollView } from \"react-native\";\nimport Plotly from \"react-native-plotly\";\nimport { LineChart } from \"react-native-chart-kit\";\n\nconst ResultModel = () => {\n  const data = [\n    {\n      __id: \"up\",\n      x: [1, 2, 3, 4],\n      y: [1, 2, 3, 4],\n      type: \"scatter\",\n    },\n  ];\n  const layout = { title: \"My cool chart!\" };\n  return (\n    // <SafeAreaView style={styles.container}>\n    //   <ScrollView contentContainerStyle={styles.container__box}>\n    <View>\n      <Text>Bezier Line Chart</Text>\n      <LineChart\n        data={{\n          labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n          datasets: [\n            {\n              data: [\n                Math.random() * 100,\n                Math.random() * 100,\n                Math.random() * 100,\n                Math.random() * 100,\n                Math.random() * 100,\n                Math.random() * 100,\n              ],\n            },\n          ],\n        }}\n        width={Dimensions.get(\"window\").width} // from react-native\n        height={220}\n        yAxisLabel=\"$\"\n        yAxisSuffix=\"k\"\n        yAxisInterval={1} // optional, defaults to 1\n        chartConfig={{\n          backgroundColor: \"#e26a00\",\n          backgroundGradientFrom: \"#fb8c00\",\n          backgroundGradientTo: \"#ffa726\",\n          decimalPlaces: 2, // optional, defaults to 2dp\n          color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n          labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n          style: {\n            borderRadius: 16,\n          },\n          propsForDots: {\n            r: \"6\",\n            strokeWidth: \"2\",\n            stroke: \"#ffa726\",\n          },\n        }}\n        bezier\n        style={{\n          marginVertical: 8,\n          borderRadius: 16,\n        }}\n      />\n    </View>\n    //     <View style={styles.metrics}>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //     </View>\n    //     <View style={styles.metrics}>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //     </View>\n    //     <View style={styles.metrics}>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //     </View>\n    //     <View style={styles.metrics}>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //     </View>\n    //     <View style={styles.metrics}>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //     </View>\n    //     <View style={styles.metrics}>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //       <Text>Hello</Text>\n    //     </View>\n    //   </ScrollView>\n    // </SafeAreaView>\n  );\n};\n\nexport default ResultModel;\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    backgroundColor: \"#51543F\",\n    flex: 1,\n  },\n  container__box: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  metrics: {\n    backgroundColor: \"#C4C4C4\",\n    margin: 10,\n  },\n  result: {\n    height: \"90%\",\n    backgroundColor: \"#C4C4C4\",\n    marginTop: 10,\n    // height: \"100%\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}