{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/TrainModel.js\",\n    _this2 = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Input, Button, ListItem, CheckBox, Divider } from \"react-native-elements\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport mlapiService from \"../services/mlapi.service\";\nimport { postTest } from \"../redux/actions/test\";\nimport { testResult } from \"../redux/actions/testResult\";\nimport { loadResult } from \"../redux/actions/loadResult\";\nvar regressors = [{\n  name: \"LinearRegression\"\n}, {\n  name: \"SVR\"\n}, {\n  name: \"KNeighborsRegressor\"\n}, {\n  name: \"RandomForestRegressor\"\n}, {\n  name: \"GradientBoostingRegressor\"\n}, {\n  name: \"RandomForestRegressor\"\n}, {\n  name: \"GradientBoostingRegressor\"\n}];\nvar classifiers = [{\n  name: \"DecisionTreeClassifier\"\n}, {\n  name: \"LogisticRegression\"\n}, {\n  name: \"SVC\"\n}, {\n  name: \"GaussianNB\"\n}, {\n  name: \"KNeighborsClassifier\"\n}, {\n  name: \"RandomForestClassifier\"\n}, {\n  name: \"GradientBoostingClassifier\"\n}];\nvar clusters = [{\n  name: \"KMeans\"\n}];\n\nfunction Taber(props) {\n  var _this = this;\n\n  return React.createElement(View, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.taber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.setModelType(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Regression\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.setModelType(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Classification\")), React.createElement(TouchableOpacity, {\n    disabled: true,\n    onPress: function onPress() {\n      return props.setModelType(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Cluster\"))), React.createElement(View, {\n    style: styles.list__view,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, props.modelType === 0 ? regressors.map(function (regr, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.handleSelectModel(regr.name);\n      },\n      style: styles.options,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, regr.name));\n  }) : props.modelType === 1 ? classifiers.map(function (regr, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.handleSelectModel(regr.name);\n      },\n      style: styles.options,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, regr.name));\n  }) : clusters.map(function (regr, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.handleSelectModel(regr.name);\n      },\n      style: styles.options,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, regr.name));\n  })))));\n}\n\nvar TrainModel = function TrainModel(props) {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      model = _React$useState2[0],\n      setModel = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      checked = _React$useState4[0],\n      setChecked = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      expanded = _React$useState6[0],\n      setExpanded = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      expanded1 = _React$useState8[0],\n      setExpanded1 = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      expanded2 = _React$useState10[0],\n      setExpanded2 = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      expanded3 = _React$useState12[0],\n      setExpanded3 = _React$useState12[1];\n\n  var _React$useState13 = React.useState(null),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      token = _React$useState14[0],\n      setToken = _React$useState14[1];\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      encoder = _useState2[0],\n      setEncoder = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imputer = _useState4[0],\n      setImputer = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      scaler = _useState6[0],\n      setScaler = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modelType = _useState8[0],\n      setModelType = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      targets = _useState10[0],\n      setTargets = _useState10[1];\n\n  var _useState11 = useState(0.25),\n      _useState12 = _slicedToArray(_useState11, 2),\n      testSize = _useState12[0],\n      setTestSize = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      usecols = _useState14[0],\n      setUsecols = _useState14[1];\n\n  var _useState15 = useState(10000),\n      _useState16 = _slicedToArray(_useState15, 2),\n      indexCol = _useState16[0],\n      setIndexCol = _useState16[1];\n\n  React.useEffect(function () {\n    AsyncStorage.getItem(\"token\").then(function (res) {\n      setToken(res);\n    });\n  }, []);\n\n  var pickDocument = function pickDocument(e) {\n    var result, fileData, formData, config;\n    return _regeneratorRuntime.async(function pickDocument$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({}));\n\n          case 3:\n            result = _context.sent;\n\n            if (result.type !== \"cancel\") {\n              fileData = {\n                uri: result.uri,\n                name: result.name,\n                type: \"text/csv\"\n              };\n              formData = new FormData();\n              formData.append(\"user_id\", props.user.user_id);\n              formData.append(\"file\", fileData);\n              console.log(formData);\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\"\n                }\n              };\n\n              if (token) {\n                config.headers[\"Authorization\"] = \"bearer \" + token;\n              }\n\n              mlapiService.uploadData(formData, config).then(function (res) {\n                console.log(res);\n              }).catch(function (err) {\n                console.log(err);\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var propTypes = {\n    postTest: PropTypes.func.isRequired,\n    user: PropTypes.object,\n    data: PropTypes.object,\n    loadResult: PropTypes.func.isRequired,\n    testResult: PropTypes.func.isRequired\n  };\n\n  var handleTrainSub = function handleTrainSub(e) {\n    var config, data;\n    return _regeneratorRuntime.async(function handleTrainSub$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            e.preventDefault();\n            config = {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n              }\n            };\n\n            if (token) {\n              config.headers[\"Authorization\"] = \"bearer \" + token;\n            }\n\n            data = {\n              user_id: props.user.user_id,\n              model_type: modelType,\n              hyper_params: props.data.hyper_params,\n              usecols: usecols,\n              index_col: indexCol,\n              targets: targets,\n              test_size: testSize,\n              dropna: checked,\n              impute: imputer,\n              encoding: encoder,\n              scaling: scaler\n            };\n\n            if (!targets) {\n              _context2.next = 10;\n              break;\n            }\n\n            props.loadResult({\n              isLoading: true\n            });\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(mlapiService.trainModel(data, config).then(function (res) {\n              props.testResult(res.data);\n              props.loadResult({\n                isLoading: false\n              });\n              console.log(res);\n            }).catch(function (err) {\n              console.log(err);\n              var status = err.response.status;\n\n              if (status === 500) {\n                props.loadResult({\n                  isLoading: false,\n                  error: status,\n                  msg: err.response.data.detail\n                });\n                alert(err.response.data.detail);\n              } else if (status === 422) {\n                props.loadResult({\n                  isLoading: false,\n                  error: status,\n                  msg: \"verify inputs\"\n                });\n                alert(\"verify inputs\");\n              }\n            }));\n\n          case 8:\n            _context2.next = 11;\n            break;\n\n          case 10:\n            alert(\"Please fill mandatory inputs\");\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleHyperChange = function handleHyperChange(text, key) {\n    if (typeof props.data.hyper_params[\"\" + key] == \"number\") {\n      props.data.hyper_params[\"\" + key] = Number(text);\n    } else if (typeof props.data.hyper_params[\"\" + key] == \"boolean\") {\n      if (text.toLowerCase() === \"true\") {\n        props.data.hyper_params[\"\" + key] = true;\n      } else {\n        props.data.hyper_params[\"\" + key] = false;\n      }\n    } else {\n      if (Number(text) != \"NaN\") {\n        props.data.hyper_params[\"\" + key] = Number(text);\n      } else if (text.toLowerCase() === \"true\") {\n        props.data.hyper_params[\"\" + key] = true;\n      } else if (text.toLowerCase() === \"false\") {\n        props.data.hyper_params[\"\" + key] = true;\n      } else {\n        props.data.hyper_params[\"\" + key] = text;\n      }\n    }\n  };\n\n  var handleSelectModel = function handleSelectModel(model_name) {\n    var data, config;\n    return _regeneratorRuntime.async(function handleSelectModel$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setModel(model_name);\n            data = {\n              user_id: props.user.user_id,\n              model_name: model_name\n            };\n            console.log(data);\n            config = {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n              }\n            };\n\n            if (token) {\n              config.headers[\"Authorization\"] = \"bearer \" + token;\n            }\n\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(mlapiService.selectModel(data, config).then(function (res) {\n              props.postTest(res.data);\n              console.log(res.data);\n            }).catch(function (err) {\n              console.log(err);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    keyboardVerticalOffset: 15,\n    style: styles.container,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    containerStyle: styles.btn,\n    title: \"Load Data\",\n    onPress: pickDocument,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }\n  }), React.createElement(ListItem.Accordion, {\n    content: React.createElement(React.Fragment, null, React.createElement(ListItem.Content, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    }, model ? model : \"Select Model\"))),\n    isExpanded: expanded,\n    onPress: function onPress() {\n      setExpanded(!expanded);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }\n  }, React.createElement(ListItem, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItem.Content, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, React.createElement(Taber, {\n    modelType: modelType,\n    setModelType: setModelType,\n    handleSelectModel: handleSelectModel,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  })))), React.createElement(ListItem.Accordion, {\n    content: React.createElement(React.Fragment, null, React.createElement(ListItem.Content, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 15\n      }\n    }, \"Train Model\"))),\n    isExpanded: expanded1,\n    onPress: function onPress() {\n      setExpanded1(!expanded1);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }\n  }, React.createElement(ListItem.Accordion, {\n    content: React.createElement(React.Fragment, null, React.createElement(ListItem.Content, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 15\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }\n    }, \"Prepare Training Data\"))),\n    isExpanded: expanded2,\n    onPress: function onPress() {\n      setExpanded2(!expanded2);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItem, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 11\n    }\n  }, React.createElement(ListItem.Content, {\n    style: {\n      height: \"83%\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      width: \"100%\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 17\n    }\n  }, React.createElement(CheckBox, {\n    center: true,\n    title: \"DropNa\",\n    checked: checked,\n    onPress: function onPress() {\n      return setChecked(!checked);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 19\n    }\n  }), React.createElement(Input, {\n    onChangeText: function onChangeText(text) {\n      return setImputer(text);\n    },\n    placeholder: \"Imputer Name\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 19\n    }\n  }), React.createElement(Input, {\n    onChangeText: function onChangeText(text) {\n      return setEncoder(text);\n    },\n    placeholder: \"Encoder Name\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 19\n    }\n  }), React.createElement(Input, {\n    onChangeText: function onChangeText(text) {\n      return setScaler(text);\n    },\n    placeholder: \"Scaler Name\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 19\n    }\n  }), React.createElement(Input, {\n    onChangeText: function onChangeText(text) {\n      return setTargets(text);\n    },\n    inputContainerStyle: {\n      borderBottomColor: \"red\"\n    },\n    placeholder: \"Target Class Name*\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 19\n    }\n  }), React.createElement(Input, {\n    onChangeText: function onChangeText(text) {\n      return setUsecols(text);\n    },\n    placeholder: \"Cols to use (col1_Name, col2_Name,..)\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 19\n    }\n  }), React.createElement(Input, {\n    onChangeText: function onChangeText(text) {\n      return setIndexCol(parseInt(text));\n    },\n    placeholder: \"Index-col = None\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 19\n    }\n  }), React.createElement(Input, {\n    onChangeText: function onChangeText(text) {\n      return setTestSize(text);\n    },\n    placeholder: \"Test_size = 0.25\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 19\n    }\n  })))))), React.createElement(ListItem.Accordion, {\n    content: React.createElement(React.Fragment, null, React.createElement(ListItem.Content, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 15\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }\n    }, \"Set HyperParams\"))),\n    isExpanded: expanded3,\n    onPress: function onPress() {\n      setExpanded3(!expanded3);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItem, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 11\n    }\n  }, React.createElement(ListItem.Content, {\n    style: {\n      height: \"80%\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 13\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      width: \"100%\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 15\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      display: \"flex\",\n      width: \"100%\",\n      justifyContent: \"space-between\",\n      padding: 10\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }\n  }, props.data ? React.createElement(React.Fragment, null, Object.keys(props.data.hyper_params).map(function (key, index) {\n    return React.createElement(View, {\n      key: index,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 31\n      }\n    }, key), React.createElement(Input, {\n      onChangeText: function onChangeText(text) {\n        return handleHyperChange(text, key);\n      },\n      placeholder: props.data.hyper_params[key] ? typeof props.data.hyper_params[key] !== \"boolean\" ? props.data.hyper_params[key].toString() : props.data.hyper_params[key].toString() : \"null\",\n      type: \"text\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 31\n      }\n    }));\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 23\n    }\n  })) : null))))), React.createElement(Button, {\n    title: \"TRAIN\",\n    type: \"solid\",\n    buttonStyle: {\n      backgroundColor: \"#CB3F61\"\n    },\n    onPress: handleTrainSub,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar mapDispatchToProps = {\n  postTest: postTest,\n  testResult: testResult,\n  loadResult: loadResult\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.auth.user,\n    data: state.test.test\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrainModel);\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: \"#03091E\",\n    padding: 10\n  },\n  btn: {\n    marginBottom: 10\n  },\n  disabled: {\n    backgroundColor: \"darkgrey\"\n  },\n  taber: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\",\n    padding: 10,\n    backgroundColor: \"lightblue\"\n  },\n  list__view: {\n    display: \"flex\",\n    height: \"80%\"\n  },\n  options: {\n    backgroundColor: \"grey\",\n    padding: 10,\n    margin: 10,\n    marginLeft: 50,\n    marginRight: 50,\n    alignItems: \"center\",\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/TrainModel.js"],"names":["React","useState","connect","PropTypes","Input","Button","ListItem","CheckBox","Divider","DocumentPicker","AsyncStorage","mlapiService","postTest","testResult","loadResult","regressors","name","classifiers","clusters","Taber","props","styles","taber","setModelType","list__view","modelType","map","regr","index","handleSelectModel","options","TrainModel","model","setModel","checked","setChecked","expanded","setExpanded","expanded1","setExpanded1","expanded2","setExpanded2","expanded3","setExpanded3","token","setToken","encoder","setEncoder","imputer","setImputer","scaler","setScaler","targets","setTargets","testSize","setTestSize","usecols","setUsecols","indexCol","setIndexCol","useEffect","getItem","then","res","pickDocument","e","preventDefault","getDocumentAsync","result","type","fileData","uri","formData","FormData","append","user","user_id","console","log","config","headers","Accept","uploadData","catch","err","propTypes","func","isRequired","object","data","handleTrainSub","model_type","hyper_params","index_col","test_size","dropna","impute","encoding","scaling","isLoading","trainModel","status","response","error","msg","detail","alert","handleHyperChange","text","key","Number","toLowerCase","model_name","selectModel","container","btn","height","width","borderBottomColor","parseInt","display","justifyContent","padding","Object","keys","toString","backgroundColor","mapDispatchToProps","mapStateToProps","state","auth","test","StyleSheet","create","flex","marginBottom","disabled","flexDirection","margin","marginLeft","marginRight","alignItems","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  SafeAreaView,\n  ScrollView,\n  KeyboardAvoidingView,\n} from \"react-native\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Input,\n  Button,\n  ListItem,\n  CheckBox,\n  Divider,\n} from \"react-native-elements\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport mlapiService from \"../services/mlapi.service\";\nimport { postTest } from \"../redux/actions/test\";\nimport { testResult } from \"../redux/actions/testResult\";\nimport { loadResult } from \"../redux/actions/loadResult\";\n\nconst regressors = [\n  {\n    name: \"LinearRegression\",\n  },\n\n  {\n    name: \"SVR\",\n  },\n  {\n    name: \"KNeighborsRegressor\",\n  },\n  {\n    name: \"RandomForestRegressor\",\n  },\n  {\n    name: \"GradientBoostingRegressor\",\n  },\n  {\n    name: \"RandomForestRegressor\",\n  },\n  {\n    name: \"GradientBoostingRegressor\",\n  },\n];\nconst classifiers = [\n  {\n    name: \"DecisionTreeClassifier\",\n  },\n  {\n    name: \"LogisticRegression\",\n  },\n  {\n    name: \"SVC\",\n  },\n\n  {\n    name: \"GaussianNB\",\n  },\n  {\n    name: \"KNeighborsClassifier\",\n  },\n\n  {\n    name: \"RandomForestClassifier\",\n  },\n\n  {\n    name: \"GradientBoostingClassifier\",\n  },\n];\nconst clusters = [\n  {\n    name: \"KMeans\",\n  },\n];\nfunction Taber(props) {\n  return (\n    <View style={{}}>\n      <View style={styles.taber}>\n        <TouchableOpacity onPress={() => props.setModelType(0)}>\n          <Text>Regression</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => props.setModelType(1)}>\n          <Text>Classification</Text>\n        </TouchableOpacity>\n        <TouchableOpacity disabled={true} onPress={() => props.setModelType(2)}>\n          <Text>Cluster</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.list__view}>\n        <SafeAreaView>\n          <ScrollView>\n            {props.modelType === 0\n              ? regressors.map((regr, index) => (\n                  <TouchableOpacity\n                    onPress={() => props.handleSelectModel(regr.name)}\n                    style={styles.options}\n                    key={index}\n                  >\n                    <Text>{regr.name}</Text>\n                  </TouchableOpacity>\n                ))\n              : props.modelType === 1\n              ? classifiers.map((regr, index) => (\n                  <TouchableOpacity\n                    onPress={() => props.handleSelectModel(regr.name)}\n                    style={styles.options}\n                    key={index}\n                  >\n                    <Text>{regr.name}</Text>\n                  </TouchableOpacity>\n                ))\n              : clusters.map((regr, index) => (\n                  <TouchableOpacity\n                    onPress={() => props.handleSelectModel(regr.name)}\n                    style={styles.options}\n                    key={index}\n                  >\n                    <Text>{regr.name}</Text>\n                  </TouchableOpacity>\n                ))}\n          </ScrollView>\n        </SafeAreaView>\n      </View>\n    </View>\n  );\n}\n\nconst TrainModel = (props) => {\n  const [model, setModel] = React.useState(null);\n\n  const [checked, setChecked] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [expanded1, setExpanded1] = React.useState(false);\n  const [expanded2, setExpanded2] = React.useState(false);\n  const [expanded3, setExpanded3] = React.useState(false);\n  const [token, setToken] = React.useState(null);\n  const [encoder, setEncoder] = useState(\"\");\n  const [imputer, setImputer] = useState(\"\");\n  const [scaler, setScaler] = useState(\"\");\n  const [modelType, setModelType] = useState(0);\n  const [targets, setTargets] = useState(\"\");\n  const [testSize, setTestSize] = useState(0.25);\n  const [usecols, setUsecols] = useState(null);\n  const [indexCol, setIndexCol] = useState(10000);\n\n  React.useEffect(() => {\n    AsyncStorage.getItem(\"token\").then((res) => {\n      setToken(res);\n    });\n  }, []);\n\n  const pickDocument = async (e) => {\n    e.preventDefault();\n    let result = await DocumentPicker.getDocumentAsync({});\n    if (result.type !== \"cancel\") {\n      const fileData = {\n        uri: result.uri,\n        name: result.name,\n        type: \"text/csv\",\n      };\n\n      const formData = new FormData();\n\n      formData.append(\"user_id\", props.user.user_id);\n      formData.append(\"file\", fileData);\n      console.log(formData);\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      };\n\n      if (token) {\n        config.headers[\"Authorization\"] = `bearer ${token}`;\n      }\n      mlapiService\n        .uploadData(formData, config)\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  const propTypes = {\n    postTest: PropTypes.func.isRequired,\n    user: PropTypes.object,\n    data: PropTypes.object,\n    loadResult: PropTypes.func.isRequired,\n    testResult: PropTypes.func.isRequired,\n  };\n\n  const handleTrainSub = async (e) => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n\n    if (token) {\n      config.headers[\"Authorization\"] = `bearer ${token}`;\n    }\n\n    const data = {\n      user_id: props.user.user_id,\n      model_type: modelType,\n      hyper_params: props.data.hyper_params,\n      usecols: usecols,\n      index_col: indexCol,\n      targets: targets,\n      test_size: testSize,\n      dropna: checked,\n      impute: imputer,\n      encoding: encoder,\n      scaling: scaler,\n    };\n    if (targets) {\n      props.loadResult({ isLoading: true });\n\n      await mlapiService\n        .trainModel(data, config)\n        .then((res) => {\n          props.testResult(res.data);\n          props.loadResult({ isLoading: false });\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n          const status = err.response.status;\n          if (status === 500) {\n            props.loadResult({\n              isLoading: false,\n              error: status,\n              msg: err.response.data.detail,\n            });\n            alert(err.response.data.detail);\n          } else if (status === 422) {\n            props.loadResult({\n              isLoading: false,\n              error: status,\n              msg: \"verify inputs\",\n            });\n            alert(\"verify inputs\");\n          }\n        });\n    } else {\n      alert(\"Please fill mandatory inputs\");\n    }\n  };\n  const handleHyperChange = (text, key) => {\n    if (typeof props.data.hyper_params[`${key}`] == \"number\") {\n      props.data.hyper_params[`${key}`] = Number(text);\n    } else if (typeof props.data.hyper_params[`${key}`] == \"boolean\") {\n      if (text.toLowerCase() === \"true\") {\n        props.data.hyper_params[`${key}`] = true;\n      } else {\n        props.data.hyper_params[`${key}`] = false;\n      }\n    } else {\n      if (Number(text) != \"NaN\") {\n        props.data.hyper_params[`${key}`] = Number(text);\n      } else if (text.toLowerCase() === \"true\") {\n        props.data.hyper_params[`${key}`] = true;\n      } else if (text.toLowerCase() === \"false\") {\n        props.data.hyper_params[`${key}`] = true;\n      } else {\n        props.data.hyper_params[`${key}`] = text;\n      }\n    }\n  };\n  const handleSelectModel = async (model_name) => {\n    setModel(model_name);\n    const data = {\n      user_id: props.user.user_id, //SET OVER HERE\n      model_name: model_name,\n    };\n    console.log(data);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n    if (token) {\n      config.headers[\"Authorization\"] = `bearer ${token}`;\n    }\n    await mlapiService\n      .selectModel(data, config)\n      .then((res) => {\n        props.postTest(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <KeyboardAvoidingView\n      behavior=\"position\"\n      keyboardVerticalOffset={15}\n      style={styles.container}\n    >\n      <Button\n        containerStyle={styles.btn}\n        title={\"Load Data\"}\n        onPress={pickDocument}\n      />\n      <ListItem.Accordion\n        content={\n          <>\n            <ListItem.Content>\n              <ListItem.Title>{model ? model : \"Select Model\"}</ListItem.Title>\n            </ListItem.Content>\n          </>\n        }\n        isExpanded={expanded}\n        onPress={() => {\n          setExpanded(!expanded);\n        }}\n      >\n        <ListItem>\n          <ListItem.Content>\n            <Taber\n              modelType={modelType}\n              setModelType={setModelType}\n              handleSelectModel={handleSelectModel}\n            />\n          </ListItem.Content>\n        </ListItem>\n      </ListItem.Accordion>\n      <ListItem.Accordion\n        content={\n          <>\n            <ListItem.Content>\n              <ListItem.Title>Train Model</ListItem.Title>\n            </ListItem.Content>\n          </>\n        }\n        isExpanded={expanded1}\n        onPress={() => {\n          setExpanded1(!expanded1);\n        }}\n      >\n        <ListItem.Accordion\n          content={\n            <>\n              <ListItem.Content>\n                <ListItem.Title>Prepare Training Data</ListItem.Title>\n              </ListItem.Content>\n            </>\n          }\n          isExpanded={expanded2}\n          onPress={() => {\n            setExpanded2(!expanded2);\n          }}\n        >\n          <ListItem>\n            <ListItem.Content style={{ height: \"83%\" }}>\n              <SafeAreaView style={{ width: \"100%\" }}>\n                <ScrollView>\n                  <CheckBox\n                    center\n                    title=\"DropNa\"\n                    checked={checked}\n                    onPress={() => setChecked(!checked)}\n                  />\n                  <Input\n                    onChangeText={(text) => setImputer(text)}\n                    placeholder=\"Imputer Name\"\n                  />\n                  <Input\n                    onChangeText={(text) => setEncoder(text)}\n                    placeholder=\"Encoder Name\"\n                  />\n                  <Input\n                    onChangeText={(text) => setScaler(text)}\n                    placeholder=\"Scaler Name\"\n                  />\n                  <Input\n                    onChangeText={(text) => setTargets(text)}\n                    inputContainerStyle={{ borderBottomColor: \"red\" }}\n                    placeholder=\"Target Class Name*\"\n                  />\n                  <Input\n                    onChangeText={(text) => setUsecols(text)}\n                    placeholder=\"Cols to use (col1_Name, col2_Name,..)\"\n                  />\n                  <Input\n                    onChangeText={(text) => setIndexCol(parseInt(text))}\n                    placeholder=\"Index-col = None\"\n                  />\n                  <Input\n                    onChangeText={(text) => setTestSize(text)}\n                    placeholder=\"Test_size = 0.25\"\n                  />\n                </ScrollView>\n              </SafeAreaView>\n            </ListItem.Content>\n          </ListItem>\n        </ListItem.Accordion>\n        <ListItem.Accordion\n          content={\n            <>\n              <ListItem.Content>\n                <ListItem.Title>Set HyperParams</ListItem.Title>\n              </ListItem.Content>\n            </>\n          }\n          isExpanded={expanded3}\n          onPress={() => {\n            setExpanded3(!expanded3);\n          }}\n        >\n          <ListItem>\n            <ListItem.Content style={{ height: \"80%\" }}>\n              <SafeAreaView style={{ width: \"100%\" }}>\n                <ScrollView\n                  contentContainerStyle={{\n                    display: \"flex\",\n                    width: \"100%\",\n                    // alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    padding: 10,\n                  }}\n                >\n                  {props.data ? (\n                    <>\n                      {/* <Text>PPP</Text> */}\n                      {Object.keys(props.data.hyper_params).map(\n                        (key, index) => {\n                          return (\n                            <View key={index}>\n                              <Text>{key}</Text>\n                              <Input\n                                onChangeText={(text) =>\n                                  handleHyperChange(text, key)\n                                }\n                                placeholder={\n                                  props.data.hyper_params[key]\n                                    ? typeof props.data.hyper_params[key] !==\n                                      \"boolean\"\n                                      ? props.data.hyper_params[key].toString()\n                                      : props.data.hyper_params[key].toString()\n                                    : \"null\"\n                                }\n                                type=\"text\"\n                              />\n                            </View>\n                          );\n                        }\n                      )}\n                      <View style={{ height: 10 }} />\n                    </>\n                  ) : null}\n                </ScrollView>\n              </SafeAreaView>\n            </ListItem.Content>\n          </ListItem>\n        </ListItem.Accordion>\n        <Button\n          title=\"TRAIN\"\n          type=\"solid\"\n          buttonStyle={{ backgroundColor: \"#CB3F61\" }}\n          onPress={handleTrainSub}\n        />\n      </ListItem.Accordion>\n    </KeyboardAvoidingView>\n  );\n};\nconst mapDispatchToProps = {\n  postTest,\n  testResult,\n  loadResult,\n};\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n  data: state.test.test,\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(TrainModel);\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    backgroundColor: \"#03091E\",\n    padding: 10,\n  },\n  btn: {\n    marginBottom: 10,\n  },\n  disabled: {\n    backgroundColor: \"darkgrey\",\n  },\n\n  taber: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\",\n    padding: 10,\n    backgroundColor: \"lightblue\",\n  },\n  list__view: {\n    display: \"flex\",\n    height: \"80%\",\n  },\n  options: {\n    backgroundColor: \"grey\",\n    padding: 10,\n    margin: 10,\n    marginLeft: 50,\n    marginRight: 50,\n    alignItems: \"center\",\n    borderRadius: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}