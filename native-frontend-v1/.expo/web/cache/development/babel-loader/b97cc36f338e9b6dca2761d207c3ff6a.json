{"ast":null,"code":"var _jsxFileName = \"/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/Dashboard.js\",\n    _this = this;\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport TrainModel from \"./TrainModel\";\nimport ResultModel from \"./ResultModel\";\nimport Predict from \"./Predict\";\nimport { Button } from \"react-native-elements\";\nimport { logout } from \"../redux/actions/auth\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loadResult } from \"../redux/actions/loadResult\";\n\nfunction HeaderRight(props) {\n  var handleLogOut = function handleLogOut() {\n    props.logout();\n  };\n\n  return React.createElement(Button, {\n    buttonStyle: {\n      backgroundColor: \"#CB3F50\"\n    },\n    containerStyle: {\n      marginRight: 5\n    },\n    title: \"Log Out\",\n    onPress: handleLogOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  });\n}\n\nvar Tab = createBottomTabNavigator();\n\nvar Dashboard = function Dashboard(props) {\n  React.useLayoutEffect(function () {\n    props.navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(HeaderRight, {\n          logout: props.logout,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 26\n          }\n        });\n      }\n    });\n  });\n  var propTypes = {\n    loadResult: PropTypes.func.isRequired,\n    result: PropTypes.object,\n    load: PropTypes.object,\n    logout: PropTypes.func.isRequired\n  };\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Train\") {\n            iconName = focused ? \"offline-bolt\" : \"offline-bolt\";\n          } else if (route.name === \"Report\") {\n            iconName = focused ? \"assessment\" : \"assessment\";\n          } else if (route.name === \"Predict\") {\n            iconName = focused ? \"play-for-work\" : \"play-for-work\";\n          }\n\n          return React.createElement(MaterialIcons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 18\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      style: styles.tab,\n      tabStyle: styles.tab__options,\n      activeTintColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Train\",\n    component: TrainModel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Report\",\n    component: ResultModel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Predict\",\n    component: Predict,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    result: state.testResult.result,\n    load: state.loadResult.load\n  };\n};\n\nvar mapDispatchToProps = {\n  loadResult: loadResult,\n  logout: logout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  text: {\n    alignItems: \"center\",\n    marginTop: \"30%\"\n  },\n  tab: {\n    position: \"absolute\",\n    display: \"flex\",\n    backgroundColor: \"#264920\",\n    margin: 5,\n    marginBottom: 10\n  },\n  tab__options: {\n    padding: 5,\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/gdpvirus/Desktop/projects/proj_1/native-frontend-v1/screens/Dashboard.js"],"names":["React","createBottomTabNavigator","MaterialIcons","TrainModel","ResultModel","Predict","Button","logout","PropTypes","connect","loadResult","HeaderRight","props","handleLogOut","backgroundColor","marginRight","Tab","Dashboard","useLayoutEffect","navigation","setOptions","headerRight","propTypes","func","isRequired","result","object","load","route","tabBarIcon","focused","color","size","iconName","name","style","styles","tab","tabStyle","tab__options","activeTintColor","mapStateToProps","state","testResult","mapDispatchToProps","StyleSheet","create","container","display","flex","flexDirection","justifyContent","text","alignItems","marginTop","position","margin","marginBottom","padding","alignSelf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport TrainModel from \"./TrainModel\";\nimport ResultModel from \"./ResultModel\";\nimport Predict from \"./Predict\";\nimport { Button } from \"react-native-elements\";\nimport { logout } from \"../redux/actions/auth\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loadResult } from \"../redux/actions/loadResult\";\n\nfunction HeaderRight(props) {\n  const handleLogOut = () => {\n    // alert(\"Log Out!\");\n    props.logout();\n  };\n  return (\n    <Button\n      buttonStyle={{ backgroundColor: \"#CB3F50\" }}\n      containerStyle={{ marginRight: 5 }}\n      title=\"Log Out\"\n      onPress={handleLogOut}\n    />\n  );\n}\n\nconst Tab = createBottomTabNavigator();\n\nconst Dashboard = (props) => {\n  React.useLayoutEffect(() => {\n    props.navigation.setOptions({\n      headerRight: () => <HeaderRight logout={props.logout} />,\n    });\n  });\n\n  const propTypes = {\n    loadResult: PropTypes.func.isRequired,\n    result: PropTypes.object,\n    load: PropTypes.object,\n    logout: PropTypes.func.isRequired,\n  };\n\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n          if (route.name === \"Train\") {\n            iconName = focused ? \"offline-bolt\" : \"offline-bolt\";\n          } else if (route.name === \"Report\") {\n            iconName = focused ? \"assessment\" : \"assessment\";\n          } else if (route.name === \"Predict\") {\n            iconName = focused ? \"play-for-work\" : \"play-for-work\";\n          }\n          return <MaterialIcons name={iconName} size={size} color={color} />;\n        },\n      })}\n      tabBarOptions={{\n        style: styles.tab,\n        tabStyle: styles.tab__options,\n        activeTintColor: \"white\",\n      }}\n    >\n      <Tab.Screen name=\"Train\" component={TrainModel} />\n      <Tab.Screen name=\"Report\" component={ResultModel} />\n      <Tab.Screen name=\"Predict\" component={Predict} />\n    </Tab.Navigator>\n  );\n};\nconst mapStateToProps = (state) => ({\n  result: state.testResult.result,\n  load: state.loadResult.load,\n});\nconst mapDispatchToProps = {\n  loadResult,\n  logout,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  text: {\n    alignItems: \"center\",\n    marginTop: \"30%\",\n  },\n  tab: {\n    position: \"absolute\",\n    display: \"flex\",\n    backgroundColor: \"#264920\",\n    margin: 5,\n    marginBottom: 10,\n  },\n  tab__options: {\n    padding: 5,\n    alignSelf: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}